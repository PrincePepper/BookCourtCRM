{"ast":null,"code":"import Vuex from 'vuex';\nimport axios from 'axios';\n\n// let store = new Vuex.Store({\n//     state: {\n//         books: []\n//     },\n//     mutations: {\n//         SET_BOOKS_TO_STATE: (state, books) => {\n//             state.books = books;\n//         }\n//     },\n//     actions: {\n//         GET_BOOKS_FROM_API({commit}) {\n//             return axios('http://localhost:3000/books', {\n//                 method: \"GET\"\n//             })\n//                 .then((books) => {\n//                     commit('SET_BOOKS_TO_STATE', books.data);\n//                     return books;\n//                 })\n//                 .catch((error) => {\n//                     console.log(error);\n//                     return error;\n//                 })\n//         }\n//     },\n//     getters: {\n//         BOOKS(state) {\n//             return state.books\n//         }\n//     }\n// });","map":{"version":3,"names":["Vuex","axios"],"sources":["/mnt/c/Users/semyo/PycharmProjects/BookCourtCRM/frontend/src/store/index.js"],"sourcesContent":["import Vuex from 'vuex'\nimport axios from 'axios'\n\n// let store = new Vuex.Store({\n//     state: {\n//         books: []\n//     },\n//     mutations: {\n//         SET_BOOKS_TO_STATE: (state, books) => {\n//             state.books = books;\n//         }\n//     },\n//     actions: {\n//         GET_BOOKS_FROM_API({commit}) {\n//             return axios('http://localhost:3000/books', {\n//                 method: \"GET\"\n//             })\n//                 .then((books) => {\n//                     commit('SET_BOOKS_TO_STATE', books.data);\n//                     return books;\n//                 })\n//                 .catch((error) => {\n//                     console.log(error);\n//                     return error;\n//                 })\n//         }\n//     },\n//     getters: {\n//         BOOKS(state) {\n//             return state.books\n//         }\n//     }\n// });\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}